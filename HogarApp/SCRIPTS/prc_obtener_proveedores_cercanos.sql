create or replace PROCEDURE prc_obtener_proveedores_cercanos(id_cliente IN NUMBER,id_servicio IN NUMBER ,ids OUT VARCHAR2) AS
P_LATITUD_CLIENTE NUMBER(38,8);
P_LONGITUD_CLIENTE NUMBER(38,8);
P_LATITUD_PROVEEDOR NUMBER(38,8);
P_LONGITUD_PROVEEDOR NUMBER(38,8);
DISTANCIA NUMBER;
LIMITEKM NUMBER := 2;

CURSOR CUR_USER_PROVE_SERV
          IS
          SELECT USUARIO_ID_PROVEEDOR AS PROVEEDORES
          FROM SERVICIO_PROVEEDOR
          WHERE SERVICIO_ID = id_servicio; 
BEGIN 
    SELECT TO_NUMBER(CO.LATITUD), TO_NUMBER(CO.LONGITUD)  INTO P_LATITUD_CLIENTE, P_LONGITUD_CLIENTE 
    FROM USUARIO U INNER JOIN COORDENADAS CO ON U.COORDENADA_ID = CO.COORDENADA_ID 
    WHERE USUARIO_ID = id_cliente;
    
    DBMS_OUTPUT.PUT_LINE(P_LATITUD_CLIENTE||' - '||P_LONGITUD_CLIENTE);
    FOR PS IN CUR_USER_PROVE_SERV
        LOOP 
        
        SELECT TO_NUMBER(CO.LATITUD), TO_NUMBER(CO.LONGITUD)  INTO P_LATITUD_PROVEEDOR, P_LONGITUD_PROVEEDOR 
        FROM USUARIO U INNER JOIN COORDENADAS CO ON U.COORDENADA_ID = CO.COORDENADA_ID 
        WHERE USUARIO_ID = PS.PROVEEDORES;    

        DISTANCIA := (acos(sin((P_LATITUD_CLIENTE * 2 * 3.1416 / 360)) * sin((P_LATITUD_PROVEEDOR * 2 * 3.1416 / 360)) + 
                    cos((P_LATITUD_CLIENTE * 2 * 3.1416 / 360)) * cos((P_LATITUD_PROVEEDOR * 2 * 3.1416 / 360)) * 
                    cos((P_LONGITUD_CLIENTE * 2 * 3.1416 / 360) - (P_LONGITUD_PROVEEDOR * 2 * 3.1416 / 360))) * 6371);

        DBMS_OUTPUT.PUT_LINE(DISTANCIA); 
        IF LIMITEKM > DISTANCIA THEN
            IDS := ids||':'||PS.PROVEEDORES;
        END IF;
    END LOOP;
END prc_obtener_proveedores_cercanos;