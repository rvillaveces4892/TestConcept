-- Generated by Oracle SQL Developer Data Modeler 18.2.0.179.0756
--   at:        2018-08-26 23:15:03 COT
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



DROP TABLE calificacion CASCADE CONSTRAINTS;

DROP TABLE categoria CASCADE CONSTRAINTS;

DROP TABLE coordenadas CASCADE CONSTRAINTS;

DROP TABLE cotizacion CASCADE CONSTRAINTS;

DROP TABLE notificacion_proveedor CASCADE CONSTRAINTS;

DROP TABLE rol CASCADE CONSTRAINTS;

DROP TABLE servicio CASCADE CONSTRAINTS;

DROP TABLE solicitud CASCADE CONSTRAINTS;

DROP TABLE usuario CASCADE CONSTRAINTS;

CREATE TABLE calificacion (
    calificacion_id          NUMBER(10) NOT NULL,
    usuario_id_calificado    NUMBER(10) NOT NULL,
    usuario_id_calificador   NUMBER(10) NOT NULL,
    comentario               VARCHAR2(400 CHAR) NOT NULL,
    valor                    NUMBER(1,1),
    fecha_creacion           DATE DEFAULT current_timestamp,
    estado                   VARCHAR2(10 CHAR) DEFAULT 'ACTIVO' NOT NULL
);

COMMENT ON COLUMN calificacion.calificacion_id IS
    'IDENTIFICACDOR DE LA CALIFICACI�N';

COMMENT ON COLUMN calificacion.usuario_id_calificado IS
    'LLAVE FOR�NEA DE CLIENTE';

COMMENT ON COLUMN calificacion.usuario_id_calificador IS
    'LLAVE FOR�NEA DE PROVEEDOR';

COMMENT ON COLUMN calificacion.comentario IS
    'COMENTARIO DE LA CALIFICACI�N';

COMMENT ON COLUMN calificacion.valor IS
    'PUNTOS OBTENIDOS MEDIDOS EN ESTRELLAS';

COMMENT ON COLUMN calificacion.fecha_creacion IS
    'FECHA DE CREACI�N DE LA CALIFICACI�N';

COMMENT ON COLUMN calificacion.estado IS
    'ESTADO DE LA CALIFICACI�N';

CREATE INDEX calificacion_pk ON
    calificacion (
        usuario_id_calificado
    ASC );

ALTER TABLE calificacion ADD CONSTRAINT calificaciones_pk PRIMARY KEY ( calificacion_id );

CREATE TABLE categoria (
    categoria_id     NUMBER(10) NOT NULL,
    nombre           VARCHAR2(100 CHAR) NOT NULL,
    descripcion      VARCHAR2(200),
    fecha_creacion   DATE DEFAULT current_timestamp,
    estado           VARCHAR2(10 CHAR) DEFAULT 'ACTIVO' NOT NULL
);

COMMENT ON COLUMN categoria.categoria_id IS
    'IDENTIFICADOR DE LA CATEGORIA';

COMMENT ON COLUMN categoria.nombre IS
    'NOMBRE DE LA CATEGORIA';

COMMENT ON COLUMN categoria.fecha_creacion IS
    'FECHA DE CREACI�N DE LA CATEGORIA';

COMMENT ON COLUMN categoria.estado IS
    'ESTADO DE LA CATEGORIA';

CREATE INDEX categorias_pk ON
    categoria (
        categoria_id
    ASC );

ALTER TABLE categoria ADD CONSTRAINT categorias_pk PRIMARY KEY ( categoria_id );

CREATE TABLE coordenadas (
    coordenada_id    NUMBER(10) NOT NULL,
    latitud          VARCHAR2(80 CHAR) NOT NULL,
    longitud         VARCHAR2(80 CHAR) NOT NULL,
    fecha_creacion   DATE DEFAULT current_timestamp,
    estado           VARCHAR2(10 CHAR) DEFAULT 'ACTIVO' NOT NULL
);

COMMENT ON COLUMN coordenadas.coordenada_id IS
    'IDENTIFICADOR DE LA COORDENADA';

COMMENT ON COLUMN coordenadas.latitud IS
    'LATITUD DE LA COORDENADA';

COMMENT ON COLUMN coordenadas.longitud IS
    'LONGITUD DE LA COORDENADA';

COMMENT ON COLUMN coordenadas.estado IS
    'ESTADO DE LA COORDENADA';

CREATE INDEX coordenadas_pk ON
    coordenadas (
        coordenada_id
    ASC );

ALTER TABLE coordenadas ADD CONSTRAINT coordenadas_pk PRIMARY KEY ( coordenada_id );

CREATE TABLE cotizacion (
    cotizacion_id          NUMBER(10) NOT NULL,
    solicitud_id           NUMBER(10) NOT NULL,
    usuario_id_proveedor   NUMBER(10) NOT NULL,
    valor                  NUMBER(10),
    fecha_estimada         DATE,
    duracion               NUMBER(5),
    fecha_creacion         DATE DEFAULT current_timestamp,
    estado                 VARCHAR2(10 CHAR) DEFAULT 'CREADA' NOT NULL
);

COMMENT ON COLUMN cotizacion.duracion IS
    'DURACION DEL TRABAJO A REALIZAR EN HORAS';

CREATE INDEX cotizacion_pk ON
    cotizacion (
        cotizacion_id
    ASC );

ALTER TABLE cotizacion ADD CONSTRAINT cotizacion_pk PRIMARY KEY ( cotizacion_id );

CREATE TABLE notificacion_proveedor (
    proveedor_id     NUMBER(10) NOT NULL,
    solicitud_id     NUMBER(10) NOT NULL,
    descripcion      VARCHAR2(400 CHAR),
    fecha_creacion   DATE DEFAULT current_timestamp,
    estado           VARCHAR2(10 CHAR) DEFAULT 'ENVIADA' NOT NULL
);

COMMENT ON COLUMN notificacion_proveedor.proveedor_id IS
    'LLAVE FOR�NEA DE PROVEEDOR';

COMMENT ON COLUMN notificacion_proveedor.solicitud_id IS
    'LLAVE FOR�NEA DE NOTIFICACI�N';

CREATE INDEX notificacion_proveedor_pk ON
    notificacion_proveedor (
        solicitud_id
    ASC,
        proveedor_id
    ASC );

CREATE INDEX notificacion_proveedor_id ON
    notificacion_proveedor (
        proveedor_id
    ASC );

CREATE INDEX notificacion_solicitud_id ON
    notificacion_proveedor (
        solicitud_id
    ASC );

ALTER TABLE notificacion_proveedor ADD CONSTRAINT notificacion_proveedor_pk PRIMARY KEY ( proveedor_id,
                                                                                          solicitud_id );

CREATE TABLE rol (
    rol_id           NUMBER(10) NOT NULL,
    descripcion      VARCHAR2(50 CHAR),
    fecha_creacion   DATE DEFAULT current_timestamp,
    estado           VARCHAR2(10) DEFAULT 'ACTIVO'
);

CREATE INDEX rol_pk ON
    rol (
        rol_id
    ASC );

ALTER TABLE rol ADD CONSTRAINT rol_pk PRIMARY KEY ( rol_id );

CREATE TABLE servicio (
    servicio_id      NUMBER(10) NOT NULL,
    categoria_id     NUMBER(10) NOT NULL,
    descripcion      VARCHAR2(200 CHAR),
    fecha_creacion   DATE DEFAULT current_timestamp,
    estado           VARCHAR2(10 CHAR) DEFAULT 'ACTIVO' NOT NULL
);

COMMENT ON COLUMN servicio.servicio_id IS
    'IDENTIFICADOR DEL SERVICIO';

COMMENT ON COLUMN servicio.descripcion IS
    'DETALLE DEL SERVICIO';

COMMENT ON COLUMN servicio.fecha_creacion IS
    'FECHA DE CREACI�N DE LA CATEGORIA';

COMMENT ON COLUMN servicio.estado IS
    'ESTADO DEL SERVICIO';

CREATE INDEX servicios_pk ON
    servicio (
        servicio_id
    ASC );

ALTER TABLE servicio ADD CONSTRAINT servicios_pk PRIMARY KEY ( servicio_id );

CREATE TABLE solicitud (
    solicitud_id           NUMBER(10) NOT NULL,
    servicio_id            NUMBER(10) NOT NULL,
    usuario_id_cliente     NUMBER(10) NOT NULL,
    usuario_id_proveedor   NUMBER(10),
    descripcion            VARCHAR2(400 CHAR),
    longitud               VARCHAR2(80 CHAR),
    latitud                VARCHAR2(80 CHAR),
    direccion              VARCHAR2(80 CHAR),
    fecha_solicitud        DATE,
    fecha_creacion         DATE DEFAULT current_timestamp,
    estado                 VARCHAR2(10) DEFAULT 'CREADA'
);

COMMENT ON COLUMN solicitud.solicitud_id IS
    'IDENTIFICADOR DE LA SOLICITUD';

COMMENT ON COLUMN solicitud.servicio_id IS
    'LLAVE FOR�NEA DEL SERVICIO';

COMMENT ON COLUMN solicitud.usuario_id_cliente IS
    'LLAVE FOR�NEA DEL CLIENTE';

COMMENT ON COLUMN solicitud.fecha_solicitud IS
    'FECHA EN QUE QUIERE QUE SE REALIZE EL SERVICIO';

CREATE INDEX solicitud_pk ON
    solicitud (
        solicitud_id
    ASC );

ALTER TABLE solicitud ADD CONSTRAINT solicitud_pk PRIMARY KEY ( solicitud_id );

CREATE TABLE usuario (
    usuario_id           NUMBER(10) NOT NULL,
    rol_id               NUMBER(10) NOT NULL, 
--  IDENTIFICADOR DE LA COORDENADA
    coordenada_id        NUMBER(10) NOT NULL,
    username             VARCHAR2(20),
    password             VARCHAR2(50 CHAR) NOT NULL,
    nombres              VARCHAR2(80 CHAR) NOT NULL,
    apellidos            VARCHAR2(80 CHAR) NOT NULL,
    correo               VARCHAR2(80 CHAR) NOT NULL,
    direccion            VARCHAR2(50 CHAR) NOT NULL,
    telefono             VARCHAR2(11 CHAR),
    descripcion_perfil   VARCHAR2(1000),
    fecha_creacion       DATE DEFAULT current_timestamp,
    estado               VARCHAR2(10 CHAR) DEFAULT 'ACTIVO'
);

COMMENT ON COLUMN usuario.usuario_id IS
    'IDENTIFICADOR DEL USUARIO';

COMMENT ON COLUMN usuario.coordenada_id IS
    'LLAVE FOR�NEA DE COORDENADAS';

COMMENT ON COLUMN usuario.password IS
    'CONTRASENIA DEL USUARIO';

COMMENT ON COLUMN usuario.nombres IS
    'NOMBRES DEL USUARIO';

COMMENT ON COLUMN usuario.apellidos IS
    'APELLIDOS DEL USUARIO';

COMMENT ON COLUMN usuario.correo IS
    'CORREO DEL USUARIO';

COMMENT ON COLUMN usuario.telefono IS
    'TELEFONO DEL USUARIO';

CREATE UNIQUE INDEX usuarios_coordenada_id ON
    usuario (
        coordenada_id
    ASC );

CREATE INDEX usuario_rol_id ON
    usuario (
        rol_id
    ASC );

CREATE INDEX usuario_pk ON
    usuario (
        usuario_id
    ASC );

ALTER TABLE usuario ADD CONSTRAINT usuarios_pk PRIMARY KEY ( usuario_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE calificacion
    ADD CONSTRAINT calificacion_usuario_calificado_fk FOREIGN KEY ( usuario_id_calificado )
        REFERENCES usuario ( usuario_id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE calificacion
    ADD CONSTRAINT calificacion_usuario_calificador_fk FOREIGN KEY ( usuario_id_calificador )
        REFERENCES usuario ( usuario_id )
            ON DELETE CASCADE;

ALTER TABLE cotizacion
    ADD CONSTRAINT cotizacion_solicitud_fk FOREIGN KEY ( solicitud_id )
        REFERENCES solicitud ( solicitud_id )
            ON DELETE CASCADE;

ALTER TABLE cotizacion
    ADD CONSTRAINT cotizacion_usuario_fk FOREIGN KEY ( usuario_id_proveedor )
        REFERENCES usuario ( usuario_id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE notificacion_proveedor
    ADD CONSTRAINT notificacion_proveedor_solicitud_fk FOREIGN KEY ( solicitud_id )
        REFERENCES solicitud ( solicitud_id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE notificacion_proveedor
    ADD CONSTRAINT notificacion_proveedor_usuario_fk FOREIGN KEY ( proveedor_id )
        REFERENCES usuario ( usuario_id )
            ON DELETE CASCADE;

ALTER TABLE servicio
    ADD CONSTRAINT servicios_categorias_fk FOREIGN KEY ( categoria_id )
        REFERENCES categoria ( categoria_id )
            ON DELETE CASCADE;

ALTER TABLE solicitud
    ADD CONSTRAINT solicitud_servicios_fk FOREIGN KEY ( servicio_id )
        REFERENCES servicio ( servicio_id )
            ON DELETE CASCADE;

ALTER TABLE solicitud
    ADD CONSTRAINT solicitud_usuario_cliente_fk FOREIGN KEY ( usuario_id_cliente )
        REFERENCES usuario ( usuario_id )
            ON DELETE CASCADE;

ALTER TABLE solicitud
    ADD CONSTRAINT solicitud_usuario_proveedor_fk FOREIGN KEY ( usuario_id_proveedor )
        REFERENCES usuario ( usuario_id )
            ON DELETE CASCADE;

ALTER TABLE usuario
    ADD CONSTRAINT usuario_rol_fk FOREIGN KEY ( rol_id )
        REFERENCES rol ( rol_id )
            ON DELETE CASCADE;

ALTER TABLE usuario
    ADD CONSTRAINT usuarios_coordenadas_fk FOREIGN KEY ( coordenada_id )
        REFERENCES coordenadas ( coordenada_id )
            ON DELETE CASCADE;

CREATE SEQUENCE calificacion_calificacion_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER calificacion_calificacion_id BEFORE
    INSERT ON calificacion
    FOR EACH ROW
    WHEN ( new.calificacion_id IS NULL )
BEGIN
    :new.calificacion_id := calificacion_calificacion_id.nextval;
END;
/

CREATE SEQUENCE categoria_categoria_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER categoria_categoria_id_trg BEFORE
    INSERT ON categoria
    FOR EACH ROW
    WHEN ( new.categoria_id IS NULL )
BEGIN
    :new.categoria_id := categoria_categoria_id_seq.nextval;
END;
/

CREATE SEQUENCE coordenada_coordenada_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER coordenada_coordenada_id_trg BEFORE
    INSERT ON coordenadas
    FOR EACH ROW
    WHEN ( new.coordenada_id IS NULL )
BEGIN
    :new.coordenada_id := coordenada_coordenada_id_seq.nextval;
END;
/

CREATE SEQUENCE cotizacion_cotizacion_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cotizacion_cotizacion_id_trg BEFORE
    INSERT ON cotizacion
    FOR EACH ROW
    WHEN ( new.cotizacion_id IS NULL )
BEGIN
    :new.cotizacion_id := cotizacion_cotizacion_id_seq.nextval;
END;
/

CREATE SEQUENCE rol_rol_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER rol_rol_id_trg BEFORE
    INSERT ON rol
    FOR EACH ROW
    WHEN ( new.rol_id IS NULL )
BEGIN
    :new.rol_id := rol_rol_id_seq.nextval;
END;
/

CREATE SEQUENCE servicio_servicio_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER servicio_servicio_id_trg BEFORE
    INSERT ON servicio
    FOR EACH ROW
    WHEN ( new.servicio_id IS NULL )
BEGIN
    :new.servicio_id := servicio_servicio_id_seq.nextval;
END;
/

CREATE SEQUENCE solicitud_solicitud_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER solicitud_solicitud_id_trg BEFORE
    INSERT ON solicitud
    FOR EACH ROW
    WHEN ( new.solicitud_id IS NULL )
BEGIN
    :new.solicitud_id := solicitud_solicitud_id_seq.nextval;
END;
/

CREATE SEQUENCE usuario_usuario_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER usuario_usuario_id_trg BEFORE
    INSERT ON usuario
    FOR EACH ROW
    WHEN ( new.usuario_id IS NULL )
BEGIN
    :new.usuario_id := usuario_usuario_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             9
-- CREATE INDEX                            13
-- ALTER TABLE                             21
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           8
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          8
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   4
-- WARNINGS                                 0
